#!/usr/bin/env bash
# DTF Core Content
# Copyright 2013-2014 Jake Valletta (@jake_valletta)
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#@About: Print devices that are not part of the AOSP image.
#@Author: Jake Valletta (jakev)
#@Health: beta
#@Version: 1.0

. dtf_log.sh
. dtf_core.sh

LOG_LEVEL=5

get_map()
{
    major=$1
    type=$2

    sql="SELECT m.name
         FROM mappings m
         WHERE m.type=${type} AND m.number=${major}"

    local_results=$(sqlite3 ${LOCAL_DB_NAME} "${sql}")    

    echo $local_results
}


diff()
{
    type=$1

    sql="SELECT d.name,d.permissions,d.owner_name,d.group_name,d.major
         FROM devices d
         WHERE d.type=${type};"


    ORIG_IFS=$IFS        # Save the original IFS
    LINE_IFS=$'\n'$'\r'  # For splitting input into lines
    FIELD_IFS=\|         # For splitting lines into fields

    local_results=$(sqlite3 "${LOCAL_DB_NAME}" "${sql}")

    echo "Potentially Exposed $2:"
    [[ -z $exposed_only ]] && echo "Name,Permissions,Owner,Group"

    IFS=$LINE_IFS
    for LINE in $local_results; do
        IFS=$FIELD_IFS
        FIELDS=($LINE)
        IFS=$LINE_IFS

        name=${FIELDS[0]}

        count=$(sqlite3 "${AOSP_DB_NAME}" "SELECT id FROM devices WHERE name='${name}';" |wc -l)


        if [ $count -eq 0 ]; then

            permissions=${FIELDS[1]}
            owner_name=${FIELDS[2]}
            group_name=${FIELDS[3]}
            major=$((0x${FIELDS[4]}))

            major_map=$(get_map "${major}" $type)

            if [ $exposed_only -eq 1 ]; then


                # Ok, lets think. First, is this thing wide open? Get the low fruits.
                other=$(echo $permissions |tail -c2)
                if [ $other -ne 0 ]; then
                    echo "[WARNING] non-zero \"other\" permissions!"
                    echo "$name (${major}/${major_map})"
                    echo "   Permissions: ${permissions}"
                    echo "   Owner: ${owner_name}"
                    echo "   Group: ${group_name}"
                fi

                owner_rtn=$(containsElement "${owner_name}" "${privileged_users[@]}")
                group_rtn=$(containsElement "${group_name}" "${privileged_users[@]}")

                if [ $owner_rtn -eq 0 ] || [ $group_rtn -eq 0 ]; then
                    echo "[WARNING] Non-strict owner/group!"
                    echo "$name (${major}/${major_map})"
                    echo "   Permissions: ${permissions}"
                    echo "   Owner: ${owner_name}"
                    echo "   Group: ${group_name}"
                fi
            else
                echo "$name,$permissions,$owner_name,$group_name"
            fi
        fi
    done
    echo ""
}

busybox=$(dtf prop get Info busybox)
db_dir=$(dtf prop get Local db-dir)
sdk=$(dtf prop get Info sdk)
exposed_only=0

# We will eventually have a list of users for a SDK level.
privileged_users=(root compass media bluetooth vpn system camera wifi input radio audio adb drm graphics mtp usb mount)

# TODO: temp fix until python version is created.
if [ "$1" = "--aosp-db" ]; then
    AOSP_DB_NAME=$2

# No argument, check for prop.
else
    aosp_prop_db=$(dtf prop get Local aosp-data-dir)
    if [ "${aosp_prop_db}" = "" ]; then
        AOSP_DB_NAME=${DTF_PACKAGES}/aosp-data-${sdk}/dbs/dev.db
    else
        AOSP_DB_NAME=${aosp_prop_db}/dev.db
    fi
fi

# Check if DB exists
if [ ! -f "${AOSP_DB_NAME}" ]; then
    echo "[ERROR] Unable to find framework database '${AOSP_DB_NAME}.' Exiting."
    exit -4
fi

LOCAL_DB_NAME=${db_dir}/dev.db

if [ "$1" == "--exposed" ]; then
    exposed_only=1
fi

diff 0 "Block"
diff 1 "Character"
diff 2 "Socket"
