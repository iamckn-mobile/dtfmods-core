#!/usr/bin/env bash
# DTF Core Content
# Copyright 2013-2014 Jake Valletta (@jake_valletta)
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#@About: Create dexdb for a framework file or all frameworks.
#@Author: Jake Valletta (jakev)
#@Health: stable
#@Version: 1.0

. dtf_core.sh
. dtf_log.sh

run_command () {

    ${DTF_BINS}/dexdumpsql create "$1" "$2"
}

db_dir=$(dtf prop get Local db-dir)
framework_dir=$(dtf prop get Local framework-dir)

mkdir ${db_dir}/frameworkdexdbs 2>/dev/null

if [ "$1" == "create" ]; then

    if [ -z "$2" ]; then
        # Do all the apps!
        log_i "Making DEX dbs for AOSP frameworks..."

        ORIG_IFS=$IFS        # Save the original IFS
        LINE_IFS=$'\n'$'\r'  # For splitting input into lines
        FIELD_IFS=\|         # For splitting lines into fields

        local_results=$(sqlite3 ${db_dir}/frameworks.db "select name from frameworks where is_aosp=1;")

        IFS=$LINE_IFS
        for LINE in $local_results; do
            IFS=$FIELD_IFS
            FIELDS=($LINE)
            IFS=$LINE_IFS

            framework_jar=${FIELDS[0]}
            framework_name=$(echo ${framework_jar} |sed 's/\.jar$//g')

            log_i "Doing \"${framework_name}\"..."
            # First try ODEX.
            if [ -f ${framework_dir}/${framework_name}.odex ]; then
                log_i "ODEX MODE"
                run_command "${framework_dir}/${framework_name}.odex" "${db_dir}/frameworkdexdbs/${framework_name}.db"
            else
                log_i "JAR MODE"
                run_command "${framework_dir}/${framework_name}.jar" "${db_dir}/frameworkdexdbs/${framework_name}.db"
            fi
        done
    else
        framework_name=$2

        log_i "Doing \"${framework_name}\"..."
        # First try ODEX.
        if [ -f ${framework_dir}/${framework_name}.odex ]; then
            log_i "ODEX MODE"
            run_command "${framework_dir}/${framework_name}.odex" "${db_dir}/frameworkdexdbs/${framework_name}.db"
        else
            log_i "JAR MODE"
            run_command "${framework_dir}/${framework_name}.jar" "${db_dir}/frameworkdexdbs/${framework_name}.db"
        fi
    fi
else
    echo "Usage: $0 create [package_name]"
    echo ""
    echo "Note: If [package_name] is not supplied, all AOSP frameworks are created."
fi
